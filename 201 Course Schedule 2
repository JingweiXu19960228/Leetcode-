1. Right code

class Solution:
    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:
        preMap = collections.defaultdict(list)
        
        for crs, pre in prerequisites:
            preMap[crs].append(pre)
            
        visited = [0]*numCourses
        res = []
        
        def dfs(visited,crs,prerequisites):
            if visited[crs] == 1:
                return False
            if visited[crs] == 2:
                return True
            
            visited[crs] = 1
            for pre in preMap[crs]:
                if not dfs(visited,pre,prerequisites):
                    return False
                
            visited[crs] = 2
            
            res.append(crs)
            
            return True
        
        for crs in range(numCourses):
            if not dfs(visited,crs,prerequisites):
                return []
            
        return res
        
2. Thought
(1). I use the solution by 'Fuxuemingzhu', notice its difference to 'Neetcode'

(2). I just realized that Array and set initializations can be done outside a function, not like variables.
