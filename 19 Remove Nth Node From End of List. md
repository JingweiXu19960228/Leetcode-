    1. Right code


    ```
    class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        fast = slow = head
        
        for _ in range(n):
            fast = fast.next
        
        if not fast:
            return head.next
        
        while (fast.next):
            fast = fast.next
            slow = slow.next
               
        slow.next = slow.next.next
               
        return head
        
    
    ```
    
    2. Thoughts
    (1). The 'if not fast' part is to deal with the case that head node is to be deleted
    
    (2). Notice the boundary. It is 'slow.next = slow.next.next', rather than 'slow = slow.next'
    Try a real example then it will make sense
